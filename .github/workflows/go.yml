name: Go

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: Build issue-creator
      run: go build .
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: Test
      run: go test -v -race -covermode=atomic -coverprofile=coverage.xml ./...
      env:
        TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
  check_generate:
    name: Check generate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: make generate
      run: go generate ./...
  # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
  docker_image_test:
    runs-on: ubuntu-latest
    name: Test Docker Image
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Check # Run https://github.com/rerost/issue-creator/blob/bf8f39be0ca7d96d22d2f946b20360978c80ea9f/action.yml#L21
    # https://github.com/rerost/issue-creator-for-test/issues/102 を元にissueを作るテスト
      run: |
        docker build -t test .
        docker run test rerost/issue-creator-for-test 102 true "echo 'OK'" $TEST_TOKEN false
      env:
        TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
  docker_build_and_push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/rerost/issue-creator
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  check-goreleaser:
    name: GoReleaser Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: check
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
